{"name":"Snappy","tagline":"Raspberry Pi + gPhoto2","body":"# Snapper - RPi2 + Node + gPhoto2\r\n\r\n__Snapper__ allows you to create swarms of cameras that can be controlled and triggered through a simple web interface.\r\n\r\nUsing the Raspberry Pi platform, each camera becomes an autonamous node in the cluster that manages its own image processing and uploading of syncronized swarm pictures.\r\n\r\n![Landing](http://wildsnapper.s3.amazonaws.com/Screen%20Shot%202015-08-16%20at%209.17.04%20PM.png)\r\n![Swarm](http://wildsnapper.s3.amazonaws.com/Screen%20Shot%202015-08-16%20at%209.17.20%20PM.png)\r\n\r\n[Official site](http://brancusi.github.io/snappy/)\r\n\r\n## The stack\r\n\r\n1. [resin.io](http://resin.io/) - For provisioning and managing the device fleet\r\n1. [pubnub](https://www.pubnub.com/) - For the pub/sub and command triggering\r\n1. [firebase](https://www.firebase.com/) - For the data layer\r\n1. [auth0](https://auth0.com/) - For user identity managment of the swarm admin\r\n1. [emberjs](https://emberjs.com/) - For the swarm admin app\r\n\r\n## Hardware Setup\r\n\r\n1. [Raspberry Pi 2 Model B](https://www.raspberrypi.org/products/raspberry-pi-2-model-b/)\r\n1. Your camera of choice. [Supported gphoto2](http://www.gphoto.org/doc/remote/)\r\n\r\nFor fast shutter capture __snapper__ uses GPIO on the RPi-2. This is useful when using a flash or when more than 1 camera is involved in the setup and precise timing is required.\r\n\r\n### Curcuit diagram\r\n\r\n![RPi-2 Switch Curcuit](http://wildsnapper.s3.amazonaws.com/transistor-study.svg)\r\n\r\n### Parts\r\n1. 1 - PN2222A - Transistor\r\n1. 1 - 1m Î© - Resistor\r\n1. Jumper wires\r\n\r\n## Software setup\r\n\r\nSnapper was built and tested using [resin.io](http://resin.io). This allows for super easy provisioning of the Pi2.\r\n\r\n### Raspberry Pi 2 - Setup (Resin.io)\r\n\r\n1. Setup an account at resin.io\r\n1. Follow their instructions for setting up the base device OS: [guide](http://docs.resin.io/#/pages/installing/gettingStarted.md). Pay close attention to the wifi setting if you are going wireless.\r\n1. Make note of the remote branch for your app on resin. We will use this in the coming steps\r\n1. Clone snapper `git clone git@github.com:brancusi/snappy.git`\r\n1. Now add the remote branch listed on resin under your new app: `git remote add resin <RESIN REPO URL>`\r\n1. You can now push code to your device using: `git push resin`\r\n1. Magic!\r\n\r\n### Setting up Pubnub\r\n\r\nFor pub/sub __snapper__ uses [Pubnub](http://pubnub.com)\r\n\r\n1. Setup free dev account at pubnub\r\n1. Copy your access keys from your pubnub dashboard\r\n1. Refer to the env vars below and add the info through the resin.io dashboard\r\n\r\n### Setting up firebase\r\n\r\nFor the data layer __snapper__ uses [Firebase](http://firebase.com)\r\n\r\n1. Setup free dev account at firebase\r\n1. Refer to the env vars below and add the info through the resin.io dashboard\r\n\r\n### ENV Vars used by your device\r\n\r\n```\r\nFIREBASE_URL=https://<YOUR_APP>.firebaseio.com/\r\n\r\nPUBNUB_PUBLISH_KEY=YOUR_PUB_KEY\r\nPUBNUB_SUBSCRIBE_KEY=YOU_SUB_KEY\r\n\r\nSWARM_ID=YOUR_SWARM_NAME\r\n\r\nAWS_ACCESS_KEY_ID=AWS_KEY\r\nAWS_SECRET_ACCESS_KEY=AWS_SECRET\r\n\r\nNODE_NAME=NAME_OF_THIS_NODE\r\n```","google":"UA-66378459-1","note":"Don't delete this file! It's used internally to help with page regeneration."}